version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: quiz_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: quiz_platform
      MYSQL_USER: quiz_user
      MYSQL_PASSWORD: quiz_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - quiz_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis (optional, for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: quiz_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quiz_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Laravel Backend API
  backend:
    build:
      context: ./api.quiz
      dockerfile: Dockerfile
    container_name: quiz_backend
    restart: unless-stopped
    ports:
      - "8000:80"
    environment:
      - APP_NAME=Quiz Platform API
      - APP_ENV=production
      - APP_KEY=base64:your-app-key-will-be-generated
      - APP_DEBUG=false
      - APP_URL=http://localhost:8000
      - LOG_CHANNEL=stdout
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=quiz_platform
      - DB_USERNAME=quiz_user
      - DB_PASSWORD=quiz_password
      - BROADCAST_DRIVER=log
      - CACHE_DRIVER=redis
      - FILESYSTEM_DISK=local
      - QUEUE_CONNECTION=sync
      - SESSION_DRIVER=redis
      - SESSION_LIFETIME=120
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      - SANCTUM_STATEFUL_DOMAINS=localhost:3000,127.0.0.1:3000
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
      - SEED_DATABASE=true
    volumes:
      - ./api.quiz/storage/app:/var/www/html/storage/app
      - ./api.quiz/storage/logs:/var/www/html/storage/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quiz_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend
  frontend:
    build:
      context: ./quiz
      dockerfile: Dockerfile
      target: runner
    container_name: quiz_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-nextauth-secret-key-here
      - API_PROXY_TARGET=http://backend:80
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - quiz_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3000"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Development services (commented out by default)
  # Uncomment these for development
  # backend-dev:
  #   build:
  #     context: ./api.quiz
  #     dockerfile: Dockerfile
  #   container_name: quiz_backend_dev
  #   ports:
  #     - "8000:80"
  #   environment:
  #     - APP_ENV=local
  #     - APP_DEBUG=true
  #   volumes:
  #     - ./api.quiz:/var/www/html
  #   depends_on:
  #     - mysql
  #     - redis
  #   networks:
  #     - quiz_network

  # frontend-dev:
  #   build:
  #     context: ./quiz
  #     dockerfile: Dockerfile
  #     target: dev
  #   container_name: quiz_frontend_dev
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=development
  #   volumes:
  #     - ./quiz:/app
  #     - /app/node_modules
  #     - /app/.next
  #   depends_on:
  #     - backend-dev
  #   networks:
  #     - quiz_network

networks:
  quiz_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:

