{
    "openapi": "3.0.0",
    "info": {
        "title": "Quiz Platform API",
        "description": "API documentation for Quiz Platform with User and Role management",
        "contact": {
            "email": "admin@quizplatform.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/api/admin/courses/{course}/approve": {
            "post": {
                "tags": [
                    "Course Approval"
                ],
                "summary": "Approve course and charge fee",
                "operationId": "a719abea18414985089707a40a3d7dec",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/courses/{course}/reject": {
            "post": {
                "tags": [
                    "Course Approval"
                ],
                "summary": "Reject course",
                "operationId": "d3230343722830c7d9ac862ec316c2c4",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reason": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/quizzes/{quiz}/approve": {
            "post": {
                "tags": [
                    "Quiz Approval"
                ],
                "summary": "Approve quiz",
                "operationId": "19baafc30f0738ba31cd4773d7044da5",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/quizzes/{quiz}/reject": {
            "post": {
                "tags": [
                    "Quiz Approval"
                ],
                "summary": "Reject quiz",
                "operationId": "68c2aa580f5fb0b17208a65331692cff",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "c7bb21a0d87049e161b8e4c9b0d909f2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcdef123456..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "operationId": "dd51a484b7fa0f97c7680fdbde14cf5f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcdef123456..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "operationId": "df9bdc6c7a6d9f20b983526b2ec0f698",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/profile": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user profile",
                "operationId": "b1eb3bba5d25e3becff8e61e26215556",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update authenticated user profile",
                "operationId": "c32ae167f9972ce3b08a338ab033f74c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe Updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.updated@example.com"
                                    },
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "currentpassword"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "current_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The current password is incorrect."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bookmarks": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get user's bookmarked quizzes",
                "description": "Display a listing of the user's bookmarked quizzes.",
                "operationId": "233ed23d9346fff85a0b94fd45e34647",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookmarked quizzes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/QuizBookmark"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bookmarks/toggle/{quiz}": {
            "post": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Toggle bookmark for a quiz",
                "description": "Toggle bookmark status for a quiz.",
                "operationId": "14a482c18337f75b3e877887cd221b32",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookmark toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "bookmarked": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bookmarks/check/{quiz}": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Check if quiz is bookmarked",
                "description": "Check if a quiz is bookmarked by the current user.",
                "operationId": "80386120d84f90eab0742a23a1f97156",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookmark status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "bookmarked": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bookmarks/{quiz}": {
            "delete": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Remove bookmark for a quiz",
                "description": "Remove a bookmark.",
                "operationId": "7732155e701b84280db05d049a3fc071",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookmark removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found or not bookmarked"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "List categories",
                "operationId": "ac9c4d978ea4e5b72915ca9728e5b8b1",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create category",
                "operationId": "cca49a87d9b0ebb9a98ad7c154b71737",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category",
                "operationId": "09767bb2e47dde77dd1e2591428b0ae1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category",
                "operationId": "7dcf71887e585de7f881e9eb98d86126",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category",
                "operationId": "9b61b65823f4a21f182506b34ddf805c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/course-bookmarks": {
            "get": {
                "tags": [
                    "Course Bookmarks"
                ],
                "summary": "Get user's bookmarked courses",
                "description": "Display a listing of the user's bookmarked courses.",
                "operationId": "5a474cbac834a65f878525044cb6209c",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookmarked courses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CourseBookmark"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/course-bookmarks/toggle/{course}": {
            "post": {
                "tags": [
                    "Course Bookmarks"
                ],
                "summary": "Toggle bookmark for a course",
                "description": "Toggle bookmark status for a course.",
                "operationId": "b3686d1ad547a6fc0d5b02e311fa750f",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookmark toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "bookmarked": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/course-bookmarks/check/{course}": {
            "get": {
                "tags": [
                    "Course Bookmarks"
                ],
                "summary": "Check if course is bookmarked",
                "description": "Check if a course is bookmarked by the current user.",
                "operationId": "52cfbb9753a6c2e73967b3f93d10c444",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookmark status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "bookmarked": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/course-bookmarks/{course}": {
            "delete": {
                "tags": [
                    "Course Bookmarks"
                ],
                "summary": "Remove bookmark for a course",
                "description": "Remove a bookmark.",
                "operationId": "53a5f47f8728d618ace0b0519cb877f9",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookmark removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found or not bookmarked"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{course}/contents": {
            "get": {
                "tags": [
                    "Course Contents"
                ],
                "summary": "List contents",
                "operationId": "6fa55995c46f0ee234dede48667043e5",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Course Contents"
                ],
                "summary": "Create content",
                "operationId": "5adaf431f87aaad74b9b6e681b3d8430",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "title"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "pdf",
                                            "text",
                                            "video",
                                            "quiz",
                                            "certificate"
                                        ]
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "order_index": {
                                        "type": "integer"
                                    },
                                    "duration_seconds": {
                                        "type": "integer"
                                    },
                                    "payload": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{course}/contents/{content}": {
            "get": {
                "tags": [
                    "Course Contents"
                ],
                "summary": "Show content",
                "operationId": "a23580a8186a696389c1bf47396ff873",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "content",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Course Contents"
                ],
                "summary": "Update content",
                "operationId": "b702273763c7e5d41422094ec0026e81",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "content",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Course Contents"
                ],
                "summary": "Delete content",
                "operationId": "d1ed33198fd115f8c257aebed355fb45",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "content",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "List courses",
                "operationId": "d452dd5ed2fa44f48bd98e5677e3cc3f",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": []
            },
            "post": {
                "tags": [
                    "Courses"
                ],
                "summary": "Create course",
                "operationId": "661e120d4c0deb68ae037ccc30104d02",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{course}": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Show course",
                "operationId": "0449b337fd98c3b8384aa8816d862c1d",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": []
            },
            "put": {
                "tags": [
                    "Courses"
                ],
                "summary": "Update course",
                "operationId": "be785e49d1bfc073431c7830ad9d2242",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Course"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Courses"
                ],
                "summary": "Delete course",
                "operationId": "7edfc059bd1db103afd9b3ff6f1e46c0",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{course}/submit": {
            "post": {
                "tags": [
                    "Courses"
                ],
                "summary": "Submit for approval",
                "operationId": "5273ce6d92631691d11bbbc58f59abfe",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/course-enrollments": {
            "get": {
                "tags": [
                    "Course Enrollments"
                ],
                "summary": "Get user's course enrollments",
                "description": "Get user's course enrollments with progress.",
                "operationId": "fffdbc63b3701869c846e63389f2fd2c",
                "responses": {
                    "200": {
                        "description": "List of user's course enrollments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "course": {
                                                        "type": "object"
                                                    },
                                                    "progress": {
                                                        "type": "object"
                                                    },
                                                    "enrolled_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{course}/progress": {
            "get": {
                "tags": [
                    "Course Enrollments"
                ],
                "summary": "Get course progress",
                "description": "Get course progress for the current user.",
                "operationId": "4e5b1504854be592d2a38a758da62bd9",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course progress data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "progress": {
                                            "type": "object"
                                        },
                                        "content_progress": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not enrolled in course"
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{course}/content/{content}/progress": {
            "post": {
                "tags": [
                    "Course Enrollments"
                ],
                "summary": "Update content progress",
                "description": "Update progress for a specific course content.",
                "operationId": "39c4f97595912a693ec76fdb1968682b",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "content",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "progress_percentage": {
                                        "type": "integer",
                                        "maximum": 100,
                                        "minimum": 0
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "not_started",
                                            "in_progress",
                                            "completed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Progress updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "progress": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not enrolled in course"
                    },
                    "404": {
                        "description": "Course or content not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{course}/enrollment-status": {
            "get": {
                "tags": [
                    "Course Enrollments"
                ],
                "summary": "Check if user is enrolled in course",
                "description": "Check enrollment status for a course.",
                "operationId": "daa4260e9ab03754c3e39103c8012221",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enrollment status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "enrolled": {
                                            "type": "boolean"
                                        },
                                        "enrollment": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{course}/enroll": {
            "post": {
                "tags": [
                    "Course Purchase"
                ],
                "summary": "Enroll free or purchase paid course",
                "operationId": "137bdc3aaf540fabcb88a7697757f9be",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{course}/reviews": {
            "get": {
                "tags": [
                    "Course Reviews"
                ],
                "summary": "List course reviews",
                "operationId": "a42310e1223ce96cb56fc9c328dca731",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": []
            },
            "post": {
                "tags": [
                    "Course Reviews"
                ],
                "summary": "Create course review (enrolled users)",
                "operationId": "a1e0c800311d7d567eadc8fb34c8a039",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating"
                                ],
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    },
                                    "comment": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{course}/reviews/{review}": {
            "put": {
                "tags": [
                    "Course Reviews"
                ],
                "summary": "Update own course review",
                "operationId": "4ac005d99836983ceb5072e794f24b81",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    },
                                    "comment": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Course Reviews"
                ],
                "summary": "Delete own or admin course review",
                "operationId": "91952d2c006ee78e95d7f7ad6f23f1ab",
                "parameters": [
                    {
                        "name": "course",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/course-reviews/{review}/hide": {
            "post": {
                "tags": [
                    "Course Reviews"
                ],
                "summary": "Hide/Unhide course review (superadmin)",
                "operationId": "c56659ac76e8e6841f47e9f6984c01f1",
                "parameters": [
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "hidden"
                                ],
                                "properties": {
                                    "hidden": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/permissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get all permissions",
                "operationId": "a49af5d462a91e9996aa5342b6de4ddd",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of permissions per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search permissions by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "guard_name",
                        "in": "query",
                        "description": "Filter by guard name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Permission"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Create a new permission",
                "operationId": "6ef531e33f8fca9c42d3e8fcaf30d5b4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "create posts"
                                    },
                                    "guard_name": {
                                        "description": "Defaults to sanctum if not provided",
                                        "type": "string",
                                        "example": "sanctum"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Permission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission created successfully"
                                        },
                                        "permission": {
                                            "$ref": "#/components/schemas/Permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/permissions/{id}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get a specific permission",
                "operationId": "16db55c19d22dca89994e416d7dd28be",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Update a permission",
                "operationId": "c5094a50888fb3f3f1254fea3140241a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "edit posts"
                                    },
                                    "guard_name": {
                                        "type": "string",
                                        "example": "sanctum"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission updated successfully"
                                        },
                                        "permission": {
                                            "$ref": "#/components/schemas/Permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete a permission",
                "operationId": "d0a14d107d6e379b9b3b5207f5c76e8e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Cannot delete permission that is assigned to roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete permission that is assigned to roles"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/permissions/{id}/roles": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get roles that have this permission",
                "operationId": "03f46c7ef4b7421346f803280ca4ea0e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Role"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quizzes/{quiz}/enroll": {
            "post": {
                "tags": [
                    "Purchase"
                ],
                "summary": "Enroll free or purchase paid quiz",
                "operationId": "a4a4b33f7d3eea095efee396484ab83a",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quizzes/{quiz}/questions": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "List questions of a quiz",
                "operationId": "044f0ced1b4c612709af89593c10f05f",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Question"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": []
            },
            "post": {
                "tags": [
                    "Questions"
                ],
                "summary": "Create question",
                "operationId": "3687df17b6e38b2e20a164fc976d5150",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "order_index"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "mcq",
                                            "true_false",
                                            "short_desc"
                                        ]
                                    },
                                    "order_index": {
                                        "type": "integer"
                                    },
                                    "text": {
                                        "type": "string"
                                    },
                                    "prompt": {
                                        "type": "string"
                                    },
                                    "sample_answer": {
                                        "type": "string"
                                    },
                                    "correct_boolean": {
                                        "type": "boolean"
                                    },
                                    "multiple_correct": {
                                        "type": "boolean"
                                    },
                                    "options": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/QuestionOption"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Question"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quizzes/{quiz}/questions/{question}": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "Get question",
                "operationId": "dc467f9aee15dd73edf98d073238169a",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "question",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Question"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": []
            },
            "put": {
                "tags": [
                    "Questions"
                ],
                "summary": "Update question",
                "operationId": "4877704d0ea3e228e55fc4485cc0a99b",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "question",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Question"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Question"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Questions"
                ],
                "summary": "Delete question",
                "operationId": "437145b8a72a034ff2e024cd46fb5a7c",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "question",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quizzes": {
            "get": {
                "tags": [
                    "Quizzes"
                ],
                "summary": "List quizzes",
                "operationId": "c104ed69adb2fcc838e14859bee82cb2",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": []
            },
            "post": {
                "tags": [
                    "Quizzes"
                ],
                "summary": "Create quiz",
                "operationId": "17442658f5bcce78980f375fe66c83f1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Algebra Fundamentals"
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "difficulty": {
                                        "type": "string",
                                        "enum": [
                                            "easy",
                                            "medium",
                                            "hard"
                                        ],
                                        "example": "medium"
                                    },
                                    "is_paid": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "price_cents": {
                                        "type": "integer",
                                        "example": 0,
                                        "nullable": true
                                    },
                                    "timer_seconds": {
                                        "type": "integer",
                                        "example": 900,
                                        "nullable": true
                                    },
                                    "randomize_questions": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "randomize_answers": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "allow_multiple_attempts": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "max_attempts": {
                                        "type": "integer",
                                        "example": 3,
                                        "nullable": true
                                    },
                                    "visibility": {
                                        "type": "string",
                                        "enum": [
                                            "public",
                                            "private"
                                        ],
                                        "example": "public"
                                    },
                                    "negative_marking": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "negative_mark_value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.5,
                                        "nullable": true
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "math",
                                            "assessment"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quizzes/{id}": {
            "get": {
                "tags": [
                    "Quizzes"
                ],
                "summary": "Get quiz",
                "operationId": "ce361b465ca18f66045654d0ed977db8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": []
            },
            "put": {
                "tags": [
                    "Quizzes"
                ],
                "summary": "Update quiz",
                "operationId": "7a420580b24a0a69cc55a676e172f09d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "difficulty": {
                                        "type": "string",
                                        "enum": [
                                            "easy",
                                            "medium",
                                            "hard"
                                        ]
                                    },
                                    "is_paid": {
                                        "type": "boolean"
                                    },
                                    "price_cents": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "timer_seconds": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "randomize_questions": {
                                        "type": "boolean"
                                    },
                                    "randomize_answers": {
                                        "type": "boolean"
                                    },
                                    "allow_multiple_attempts": {
                                        "type": "boolean"
                                    },
                                    "max_attempts": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "visibility": {
                                        "type": "string",
                                        "enum": [
                                            "public",
                                            "private"
                                        ]
                                    },
                                    "negative_marking": {
                                        "type": "boolean"
                                    },
                                    "negative_mark_value": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Quizzes"
                ],
                "summary": "Delete quiz",
                "operationId": "61dcdd818514499d9fbc968c684e17e8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quiz-enrollments": {
            "get": {
                "tags": [
                    "Quiz Enrollments"
                ],
                "summary": "Get user's quiz enrollments",
                "description": "Get all quiz enrollments for the authenticated user.",
                "operationId": "23e1f5fc54db9783314b5a6a33980626",
                "responses": {
                    "200": {
                        "description": "List of quiz enrollments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quizzes/{quiz}/enrollment-status": {
            "get": {
                "tags": [
                    "Quiz Enrollments"
                ],
                "summary": "Check if user is enrolled in quiz",
                "description": "Check enrollment status for a quiz.",
                "operationId": "673004cc7eef9659af0d40ac3c394335",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enrollment status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "enrolled": {
                                            "type": "boolean"
                                        },
                                        "enrollment": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quizzes/{quiz}/ranking": {
            "get": {
                "tags": [
                    "Quiz Rankings"
                ],
                "summary": "Get quiz ranking/leaderboard",
                "description": "Get quiz ranking/leaderboard for a specific quiz.",
                "operationId": "c907bed154570ff404573e6400d58ffd",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 50
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quiz ranking data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "quiz": {
                                            "type": "object"
                                        },
                                        "ranking": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "total_participants": {
                                            "type": "integer"
                                        },
                                        "user_rank": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found"
                    }
                }
            }
        },
        "/api/user/quiz-rankings": {
            "get": {
                "tags": [
                    "Quiz Rankings"
                ],
                "summary": "Get user's quiz rankings",
                "description": "Get user's ranking across all quizzes.",
                "operationId": "88f92c07f76f38c3a6bf8baf3bd079fd",
                "responses": {
                    "200": {
                        "description": "User's quiz rankings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quizzes/{quiz}/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "List reviews (public)",
                "operationId": "4c54504a4245e3eb356d07149d661816",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": []
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create review (paid purchasers only)",
                "operationId": "bd5b34eda5cf833747e11f2a3a0b3a3b",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating"
                                ],
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    },
                                    "comment": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/quizzes/{quiz}/reviews/{review}": {
            "put": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update own review",
                "operationId": "200a6030afd4c11d6d69dad46f499c8b",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    },
                                    "comment": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete own review or admin delete",
                "operationId": "a2a8a72f2547d0b45a34952b4f23b8e2",
                "parameters": [
                    {
                        "name": "quiz",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reviews/{review}/hide": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Hide/Unhide review (superadmin)",
                "operationId": "11d6d9df660ba7802c2caa5d324523b1",
                "parameters": [
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "hidden"
                                ],
                                "properties": {
                                    "hidden": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get list of roles",
                "operationId": "ca86f0a206144dfbd695b749b4b28f9d",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Role"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Create a new role",
                "operationId": "341b8b162b61267c7bd187500aea5bc4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "moderator"
                                    },
                                    "guard_name": {
                                        "type": "string",
                                        "example": "web"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "view users",
                                            "edit users"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role by ID",
                "operationId": "15c404caf238f1861c81f68205d328e5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update role",
                "operationId": "c73ab816ae8fb7c34a995d37ba577082",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "moderator"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "view users",
                                            "edit users"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete role",
                "operationId": "ffa6ef115d86b00cc6c54a6210019f9c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Role deleted successfully"
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/roles/{id}/permissions": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role permissions",
                "operationId": "544e49067ea1110731ca7892b976db7d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "permissions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Permission"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Assign permissions to role",
                "operationId": "849c3c1071e3590a96bdbae84f270ad8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "view users",
                                            "edit users"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/roles/{id}/assign": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Assign role to user",
                "operationId": "649a5a86a6219686a4b7869aeeb12a72",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role assigned successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Role or User not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/roles/{id}/revoke": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Revoke role from user",
                "operationId": "17fee422053d09245fd8b95ff146e556",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role revoked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role revoked successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Role or User not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/settings/quiz": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get quiz settings",
                "operationId": "1352a74e9b10472712bb8fc8bc002ca2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "paid_quiz_approval_amount_cents": {
                                            "type": "integer"
                                        },
                                        "platform_commission_percent": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update quiz settings",
                "operationId": "cfff73fa8c7b9fa1f6c70637bdc34119",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "paid_quiz_approval_amount_cents": {
                                        "type": "integer"
                                    },
                                    "platform_commission_percent": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/settings/payments": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get payment providers",
                "operationId": "bab828cd6d78ac64e15f82ae8514da00",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentSetting"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/settings/payments/{provider}": {
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update payment provider",
                "operationId": "1e8d33a184a3a7bff9d9ce51b6708061",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "config": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/settings/course": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get course settings",
                "operationId": "475d74f784ba9e9fd62cc9541b107186",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "course_approval_fee_cents": {
                                            "type": "integer"
                                        },
                                        "course_platform_commission_percent": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update course settings",
                "operationId": "69e2199b2d5197c6550411ec33e5e8d8",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "course_approval_fee_cents": {
                                        "type": "integer"
                                    },
                                    "course_platform_commission_percent": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/social/{provider}/redirect": {
            "get": {
                "tags": [
                    "Social Authentication"
                ],
                "summary": "Get redirect URL for social provider",
                "description": "Returns the redirect URL to initiate social authentication with the specified provider",
                "operationId": "24ebd94fbf93e8f20a81a6f53241d146",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "Social provider name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "google",
                                "github",
                                "facebook"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Redirect URL generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "redirect_url": {
                                            "type": "string",
                                            "example": "https://accounts.google.com/oauth/authorize?client_id=..."
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Redirecting to google for authentication"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid provider",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Provider 'invalid' is not supported"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/social/{provider}/callback": {
            "get": {
                "tags": [
                    "Social Authentication"
                ],
                "summary": "Handle social provider callback",
                "description": "Handles the callback from social provider after user authentication",
                "operationId": "d0c78a4c770870cc3bbb1ec1bbd97a31",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "Social provider name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "google",
                                "github",
                                "facebook"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/SocialUser"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcdef123456..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid authorization code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to process social authentication"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database connection failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/social/{provider}/login": {
            "post": {
                "tags": [
                    "Social Authentication"
                ],
                "summary": "Login with social provider authorization code",
                "description": "Handles social login using authorization code (useful for mobile apps)",
                "operationId": "132aaa35317ac7a47c5146aae58cd0b4",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "Social provider name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "google",
                                "github",
                                "facebook"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Authorization code from social provider",
                                        "type": "string",
                                        "example": "4/0AX4XfWh..."
                                    },
                                    "state": {
                                        "description": "State parameter for CSRF protection",
                                        "type": "string",
                                        "example": "random_state_string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/SocialUser"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcdef123456..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid authorization code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "code": [
                                                    "The code field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/uploads": {
            "post": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Upload an image",
                "operationId": "3db2bedfa87142cb789da8b4bfb2db07",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "url": {
                                            "type": "string"
                                        },
                                        "path": {
                                            "type": "string"
                                        },
                                        "mime": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "operationId": "566aed8efb436ca506e0ef51a032ecd9",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "be551c1d694a01c164966f58bfa77013",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "user"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "operationId": "6f51bd5fa2dddcd25e44cfa53dcbd10a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "operationId": "070e37fc9aff78ae73860751bc990ed3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "admin"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "operationId": "0b4133ed462528a5e648b88ead11e929",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/wallet/balance": {
            "get": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Get wallet balance",
                "operationId": "8fa414b5a64f27a3ca4f8fe3948df441",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletAccount"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/wallet/recharge": {
            "post": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Initiate recharge",
                "operationId": "1d646a9dae80c8fd8fac0f3336b85c51",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount_cents",
                                    "provider"
                                ],
                                "properties": {
                                    "amount_cents": {
                                        "type": "integer"
                                    },
                                    "provider": {
                                        "type": "string",
                                        "enum": [
                                            "bkash",
                                            "sslcommerz"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletTransaction"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/wallet/recharge/confirm": {
            "post": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Confirm recharge (webhook/mock)",
                "operationId": "59b55f1adbb76271bf50efe2e2c5706c",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "transaction_id",
                                    "status"
                                ],
                                "properties": {
                                    "transaction_id": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "completed",
                                            "failed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/wallet/withdrawals": {
            "post": {
                "tags": [
                    "Withdrawals"
                ],
                "summary": "Request withdrawal",
                "operationId": "30b3386ad0aed41d95ed9b43b950622a",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount_cents",
                                    "provider"
                                ],
                                "properties": {
                                    "amount_cents": {
                                        "type": "integer"
                                    },
                                    "provider": {
                                        "type": "string",
                                        "enum": [
                                            "bkash",
                                            "sslcommerz"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/withdrawals": {
            "get": {
                "tags": [
                    "Withdrawals"
                ],
                "summary": "List pending withdrawals",
                "operationId": "338ae56a1edbeab56a4679e21255b633",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/withdrawals/{id}/approve": {
            "post": {
                "tags": [
                    "Withdrawals"
                ],
                "summary": "Approve withdrawal",
                "operationId": "3835bcf327d2220b26ee98c5a8abd431",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/withdrawals/{id}/reject": {
            "post": {
                "tags": [
                    "Withdrawals"
                ],
                "summary": "Reject withdrawal",
                "operationId": "0dd93f53ee415badc81a0fe1f54aa9ca",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "QuizBookmark": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "user_id": {
                                "type": "integer"
                            },
                            "quiz_id": {
                                "type": "integer"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "quiz": {
                                "$ref": "#/components/schemas/Quiz"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Category": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            },
                            "parent_id": {
                                "type": "integer",
                                "nullable": true
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CourseBookmark": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "user_id": {
                                "type": "integer"
                            },
                            "course_id": {
                                "type": "integer"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "course": {
                                "$ref": "#/components/schemas/Course"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Course": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "owner_id": {
                                "type": "integer"
                            },
                            "title": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            },
                            "summary": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "cover_url": {
                                "type": "string"
                            },
                            "is_paid": {
                                "type": "boolean"
                            },
                            "price_cents": {
                                "type": "integer",
                                "nullable": true
                            },
                            "visibility": {
                                "type": "string",
                                "enum": [
                                    "public",
                                    "private"
                                ]
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "submitted",
                                    "approved",
                                    "rejected"
                                ]
                            },
                            "rating_avg": {
                                "type": "number",
                                "format": "float"
                            },
                            "rating_count": {
                                "type": "integer"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CourseReview": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "course_id": {
                                "type": "integer"
                            },
                            "user_id": {
                                "type": "integer"
                            },
                            "rating": {
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "comment": {
                                "type": "string",
                                "nullable": true
                            },
                            "is_hidden": {
                                "type": "boolean"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "QuestionOption": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "text": {
                                "type": "string"
                            },
                            "is_correct": {
                                "type": "boolean"
                            },
                            "order_index": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Question": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "quiz_id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "mcq",
                                    "true_false",
                                    "short_desc"
                                ]
                            },
                            "order_index": {
                                "type": "integer"
                            },
                            "text": {
                                "type": "string"
                            },
                            "prompt": {
                                "type": "string"
                            },
                            "sample_answer": {
                                "type": "string"
                            },
                            "multiple_correct": {
                                "type": "boolean"
                            },
                            "correct_boolean": {
                                "type": "boolean"
                            },
                            "points": {
                                "type": "integer"
                            },
                            "requires_manual_grading": {
                                "type": "boolean"
                            },
                            "options": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/QuestionOption"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Quiz": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "owner_id": {
                                "type": "integer"
                            },
                            "category_id": {
                                "type": "integer",
                                "nullable": true
                            },
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "difficulty": {
                                "type": "string",
                                "enum": [
                                    "easy",
                                    "medium",
                                    "hard"
                                ]
                            },
                            "is_paid": {
                                "type": "boolean"
                            },
                            "price_cents": {
                                "type": "integer",
                                "nullable": true
                            },
                            "timer_seconds": {
                                "type": "integer",
                                "nullable": true
                            },
                            "randomize_questions": {
                                "type": "boolean"
                            },
                            "randomize_answers": {
                                "type": "boolean"
                            },
                            "allow_multiple_attempts": {
                                "type": "boolean"
                            },
                            "max_attempts": {
                                "type": "integer",
                                "nullable": true
                            },
                            "visibility": {
                                "type": "string",
                                "enum": [
                                    "public",
                                    "private"
                                ]
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "draft",
                                    "published"
                                ]
                            },
                            "negative_marking": {
                                "type": "boolean"
                            },
                            "negative_mark_value": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Tag": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Review": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "quiz_id": {
                                "type": "integer"
                            },
                            "user_id": {
                                "type": "integer"
                            },
                            "rating": {
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1
                            },
                            "comment": {
                                "type": "string",
                                "nullable": true
                            },
                            "is_hidden": {
                                "type": "boolean"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Setting": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "key": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "PaymentSetting": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "provider": {
                                "type": "string",
                                "enum": [
                                    "bkash",
                                    "sslcommerz"
                                ]
                            },
                            "enabled": {
                                "type": "boolean"
                            },
                            "config": {
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "SocialUser": {
                "title": "Social User",
                "description": "User information returned after social authentication",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "User ID",
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "description": "User's full name",
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "description": "User's email address",
                                "type": "string",
                                "format": "email",
                                "example": "john@example.com"
                            },
                            "avatar": {
                                "description": "User's avatar URL",
                                "type": "string",
                                "example": "https://example.com/avatar.jpg"
                            },
                            "provider": {
                                "description": "Social provider used for authentication",
                                "type": "string",
                                "example": "google"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "SocialAuthResponse": {
                "title": "Social Authentication Response",
                "description": "Response structure for social authentication endpoints",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "success": {
                                "description": "Indicates if the request was successful",
                                "type": "boolean",
                                "example": true
                            },
                            "message": {
                                "description": "Response message",
                                "type": "string",
                                "example": "Login successful"
                            },
                            "user": {
                                "$ref": "#/components/schemas/SocialUser"
                            },
                            "token": {
                                "description": "Authentication token",
                                "type": "string",
                                "example": "1|abcdef123456..."
                            },
                            "token_type": {
                                "description": "Token type",
                                "type": "string",
                                "example": "Bearer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "SocialAuthError": {
                "title": "Social Authentication Error",
                "description": "Error response structure for social authentication endpoints",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "success": {
                                "description": "Indicates if the request was successful",
                                "type": "boolean",
                                "example": false
                            },
                            "message": {
                                "description": "Error message",
                                "type": "string",
                                "example": "Authentication failed"
                            },
                            "error": {
                                "description": "Detailed error information",
                                "type": "string",
                                "example": "Invalid authorization code"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "WalletAccount": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "user_id": {
                                "type": "integer"
                            },
                            "balance_cents": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "WalletTransaction": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "properties": {
                            "transaction_id": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "amount_cents": {
                                "type": "integer"
                            },
                            "status": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    }
                },
                "type": "object"
            },
            "Role": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "admin"
                    },
                    "guard_name": {
                        "type": "string",
                        "example": "web"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    }
                },
                "type": "object"
            },
            "Permission": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "view users"
                    },
                    "guard_name": {
                        "type": "string",
                        "example": "web"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Course Approval",
            "description": "Approve or reject courses (admin)"
        },
        {
            "name": "Quiz Approval",
            "description": "Admin and superadmin quiz approvals"
        },
        {
            "name": "Authentication",
            "description": "Authentication endpoints for login, register, logout, and profile management"
        },
        {
            "name": "Bookmarks",
            "description": "Quiz bookmark management"
        },
        {
            "name": "Categories",
            "description": "Category management endpoints"
        },
        {
            "name": "Course Bookmarks",
            "description": "Course bookmark management"
        },
        {
            "name": "Course Contents",
            "description": "Manage course contents"
        },
        {
            "name": "Courses",
            "description": "Course management"
        },
        {
            "name": "Course Enrollments",
            "description": "API endpoints for course enrollment and progress tracking"
        },
        {
            "name": "Course Purchase",
            "description": "Enroll or purchase courses"
        },
        {
            "name": "Course Reviews",
            "description": "Reviews for courses (free and paid)"
        },
        {
            "name": "Permissions",
            "description": "Permission management endpoints"
        },
        {
            "name": "Purchase",
            "description": "Enroll or purchase quizzes"
        },
        {
            "name": "Questions",
            "description": "Question management (nested under quizzes)"
        },
        {
            "name": "Quizzes",
            "description": "Quiz management"
        },
        {
            "name": "Quiz Enrollments",
            "description": "API endpoints for quiz enrollment status checking"
        },
        {
            "name": "Quiz Rankings",
            "description": "API endpoints for quiz rankings and leaderboards"
        },
        {
            "name": "Reviews",
            "description": "Quiz reviews (paid quizzes only)"
        },
        {
            "name": "Roles",
            "description": "Role management endpoints"
        },
        {
            "name": "Settings",
            "description": "Platform settings (superadmin)"
        },
        {
            "name": "Social Authentication",
            "description": "Social authentication endpoints for Google, GitHub, and Facebook login"
        },
        {
            "name": "Uploads",
            "description": "Media upload endpoints"
        },
        {
            "name": "Users",
            "description": "User management endpoints"
        },
        {
            "name": "Wallet",
            "description": "Wallet operations"
        },
        {
            "name": "Withdrawals",
            "description": "Withdrawal requests and approvals"
        }
    ]
}